<h3>DetailsOrder</h3>

@page "/order/details/{id:int}"

@rendermode InteractiveServer

@inject SolarTech.Data.SolarTechDbContext DbContext
@inject NavigationManager NavigationManager

@if(order == null)
    {
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">
                Order not found
            </h5>
            <button class="btn btn-primary" @onclick="GoBack">Go Back</button>
        </div>
    </div>
    }
else
    {
    <div class="card">
        <div class="card-header">
            Order Nr. @order.Id - @order.Customer.Name
        </div>
        <div class="card-body">
            <h5 class="card-title">
                Order Details
            </h5>
            <p class="card-text">Date: @order.Date.ToShortDateString()</p>
            <p class="card-text">Description: @order.Description</p>
            <p class="card-text">Net: @order.NetAmount€</p>
            <p class="card-text">Gross: @order.GrossAmount€</p>
            <hr />
            <h5 class="card-title">
                Customer Details
            </h5>
            <p class="card-text">Name: @order.Customer.Name</p>
            <p class="card-text">Email: @order.Customer.Email</p>
            <p class="card-text">Address: @order.Customer.Address</p>
            <hr />
        </div>
        <div class="card-footer">
            <button class="btn btn-secondary" @onclick="GoBack">Go Back</button>
        </div>
    </div>
    }

@code {

    [Parameter]
    public int Id { get; set; }

    private Order order;


    protected override void OnInitialized()
        {
        order = DbContext.Orders
        .Include(order => order.Customer)
        .SingleOrDefault(order => order.Id == Id);
        }

    private void GoBack()
        {
        NavigationManager.NavigateTo("/orders");
        }
}
